trigger:
- feature-4.0

pool:
  name: agents

variables:
  - template: "vars.yml"
  - group: manifest-git

stages:
  - stage: Build_Test
    jobs:
      - job: gitleaks_SBOM
        displayName: Detect secrets & Generate SBOM
        steps:
          - task: Gitleaks@2
            inputs:
              scanlocation: '$(Build.SourcesDirectory)'
              configtype: 'predefined'
              predefinedconfigfile: 'GitleaksUdmCombo.toml'
              scanmode: 'nogit'
              redact: false
              taskfail: false
              reportformat: 'sarif'
          - script: |
              curl -Lo $(Agent.TempDirectory)/sbom-tool https://github.com/microsoft/sbom-tool/releases/latest/download/sbom-tool-linux-x64
              chmod +x $(Agent.TempDirectory)/sbom-tool
              $(Agent.TempDirectory)/sbom-tool generate -b $(Build.ArtifactStagingDirectory) -bc $(Build.SourcesDirectory) -pn Test -pv 1.0.0 -ps MyCompany -nsb https://sbom.mycompany.com -V Verbose
          
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'sbom'
              publishLocation: 'Container'
                    

      - job: Artifact_Build
        displayName: Testing & Building artifacts
        dependsOn: gitleaks_SBOM
        steps:  
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              codeCoverageToolOption: 'JaCoCo'
              codeCoverageSourceDirectories: 'src/test'
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
          - task: PublishCodeCoverageResults@2
            inputs:
              summaryFileLocation: '$(System.DefaultWorkingDirectory)/target/site/jacoco/jacoco.xml'
              pathToSources: '$(System.DefaultWorkingDirectory)/src/main'
          - script: |
              ls -la
              ls -la target
              
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: '**/target/*.jar'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'springapp'
              publishLocation: 'Container'

      - job: Dependency_Check
        displayName: Checking the dependency
        dependsOn: Artifact_Build
        steps:
          - checkout: none
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'springapp'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: dependency-check-build-task@6
            inputs:
              projectName: 'spring-app'
              scanPath: '**/target/*.jar'
              format: 'JUNIT'

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'dependency-check/*junit.xml'
              searchFolder: '$(Common.TestResultsDirectory)'
              testRunTitle: 'Dependency Check'

          

          

              


